# Stages
# Stage-1:
  # Task-1: Build Docker Image and push to ECR
  # Task-2: Copy kube-manifest files to Build Artifact Directory
  # Task-3: Publish build articats to Azure Pipelines

trigger:
- master

pool:
  vmImage: ubuntu-latest

# Variables
variables:
  tag: '$(Build.BuildId)'

stages:
# Build Stage 
- stage: Docker
  displayName: Build & Push Docker image to AWS ECR
  jobs:
  - job: Build_and_Push
    displayName: Build_and_Push Docker Image

    steps: 

    # Task-1: Build Docker Image
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '**/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        repository: $(DOCKER_REPOSITORY_NAME)

    # Task-2: Push Docker Image to ECR 
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'tf-aws'
        regionName: "us-east-1"
        imageSource: 'imagename'
        sourceImageName: $(DOCKER_REPOSITORY_NAME)
        sourceImageTag: $(tag)
        pushTag: latest
        repositoryName: $(DOCKER_REPOSITORY_NAME)

    ## Publish Artifacts

    # Task-3: Copy files (Copy files from a source folder to target folder)
    # Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
    # Target Directory: $(Build.ArtifactStagingDirectory)   
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/kube-manifests'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
        
    # Task-4: Publish build artifacts (Publish build to Azure Pipelines)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'